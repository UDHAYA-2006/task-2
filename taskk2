package task1_java;

import java.io.*;
import java.nio.file.*;

public class FileHandlingUtility {

    // Define the file path (you can change this path if needed)
    private static final String FILE_NAME = "example.txt";

    public static void main(String[] args) {
        try {
            // 1. Write content to the file
            writeToFile("Welcome to the File Handling Utility!\nThis is a test file.\n");

            // 2. Read and display the file content
            System.out.println("=== Original File Content ===");
            readFromFile();

            // 3. Modify content: Replace the word "test" with "demo"
            modifyFileContent("test", "demo");

            // 4. Display modified content
            System.out.println("\n=== Modified File Content ===");
            readFromFile();

        } catch (IOException e) {
            System.err.println("Error: " + e.getMessage());
        }
    }

    /**
     * Writes the specified content to a file.
     * If the file exists, it will be overwritten.
     */
    public static void writeToFile(String content) throws IOException {
        // Using BufferedWriter to write text to the file
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(FILE_NAME))) {
            writer.write(content);
            System.out.println("✅ File written successfully.");
        }
    }

    /**
     * Reads and prints the content of the file line by line.
     */
    public static void readFromFile() throws IOException {
        // Using BufferedReader to read the file line by line
        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_NAME))) {
            String line;
            while ((line = reader.readLine()) != null) {
                System.out.println(line);
            }
        }
    }

    /**
     * Modifies the content of the file by replacing all occurrences of
     * oldWord with newWord.
     */
    public static void modifyFileContent(String oldWord, String newWord) throws IOException {
        // Read the file content into a string
        Path filePath = Paths.get(FILE_NAME);
        String content = new String(Files.readAllBytes(filePath));

        // Replace the old word with the new word
        String modifiedContent = content.replaceAll(oldWord, newWord);

        // Write the modified content back to the file
        Files.write(filePath, modifiedContent.getBytes());
        System.out.println("✏ File modified: '" + oldWord + "' replaced with '" + newWord + "'.");
    }

}
